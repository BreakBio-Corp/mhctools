# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# TODO:
# - cache this directory $HOME/.cache/pyensembl/
# - update coveralls
# - get a badge for tests passing
# - download binary dependencies from conda
name: Tests
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Checkout private netmhc-bundle repo
        uses: actions/checkout@v4
        with:
          repository: openvax/netmhc-bundle
          token: ${{ secrets.NETMHC_BUNDLE_ACCESS_TOKEN }}
          path: netmhc-bundle
      - name: Configure netmhc-bundle paths
        run: |
          ls -l .
          ls -l netmhc-bundle
          export NETMHC_BUNDLE_HOME=$PWD/netmhc-bundle
          mkdir tmp
          export NETMHC_BUNDLE_TMPDIR=$PWD/tmp
          export PATH=$PATH:$NETMHC_BUNDLE_HOME/bin
          # make sure netmhc-bundle tools are actually installed
          echo `which netMHC` && echo `which netMHCpan` && echo `which netMHCcons`
          # make sure netmhc-bundle tools are executable
          netMHC -h
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest pytest-cov coveralls

          echo `pwd` && echo " || requirements:" && cat requirements.txt
          pip install -r requirements.txt
          pip install .
      - name: Run default linting script
        run: |
          ./lint.sh
      - name: Install MHCflurry data
        run: |
          mhcflurry-downloads fetch
      - name: Run unit tests
        run: |
          ./test.sh
      - name: Publish coverage to Coveralls
        uses: coverallsapp/github-action@v2.2.3
